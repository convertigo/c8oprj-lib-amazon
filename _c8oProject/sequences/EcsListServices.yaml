comment: List services from a Cluster
↓Execute [steps.SimpleStep-1737491377288]: 
  expression: |
    '// Import AWS SDK classes using JavaImporter
    var AWS = new JavaImporter(
        com.amazonaws.auth.AWSStaticCredentialsProvider,
        com.amazonaws.auth.BasicAWSCredentials,
        com.amazonaws.regions.Regions,
        com.amazonaws.services.ecs.AmazonECS,
        com.amazonaws.services.ecs.AmazonECSClientBuilder,
        com.amazonaws.services.ecs.model.ListServicesRequest,
        com.amazonaws.services.ecs.model.ListServicesResult
    );
    
    function listServices() {
    	with (AWS) {
    	    // Replace these with your actual AWS credentials
    	    var AWS_ACCESS_KEY = "${lib_amazon.AWS_ACCESS_KEY=mykey}";
    	    var AWS_SECRET_KEY = "${lib_amazon.AWS_ACCESS_KEY.secret=mysecretkey}";
    	
    	    // Configure AWS region
    	    var region = Regions["${lib_amazon.AWS_REGION=EU_WEST_1}"];
    	
    	    // Create AWS credentials
    		  var awsCreds = new BasicAWSCredentials(AWS_ACCESS_KEY, AWS_SECRET_KEY);
      
    	    // Create ECS client with explicit credentials
            var ecsClient = AmazonECSClientBuilder.standard()
                .withRegion(region)
                .withCredentials(new AWSStaticCredentialsProvider(awsCreds))
                .build();
    	
    	    try {
    	        // Create ListServices request
                var request = new ListServicesRequest()
                    .withCluster(cluster) // Replace with your cluster name if needed
                    .withMaxResults(100);    // Number of services to retrieve
    	
    	        // Call ECS ListServices API
    	        reponse = ecsClient.listServices(request);
    	        jResponse = [];
    			serviceArns = reponse.getServiceArns()
    			for (var i = 0; i < serviceArns.size(); i++) {
    				jResponse.push(serviceArn.get(i));
    			};
    	    } catch (e) {
    			// Handle exceptions
    			log.error("Error listing services: " + e);
    			jError = e;
    	    } finally {
    	        // Close ECS client
    	    }
    	}
    }
    
    // Call the function
    var jResponse = null
    var jError = null
    listServices();
    
    '
↓jIf [steps.IfStep-1737496359730]: 
  condition: jError != null
  ↓Error_structure [steps.XMLErrorStep-1737496387187]: 
    details: 
      - xmlizable: 
        - ↑classname: com.twinsoft.convertigo.beans.steps.SmartType
        - SmartType: 
          - ↑mode: JS
          - →→: jError
  ↓Return [steps.ReturnStep-1737496425399]: 
↓object [steps.JsonToXmlStep-1737492107741]: 
  jsonObject: 
    - xmlizable: 
      - ↑classname: com.twinsoft.convertigo.beans.steps.SmartType
      - SmartType: 
        - ↑mode: JS
        - →→: jResponse
  jsonSample: |
    '{
      "response": {
        "services": [
          {
            "serviceArn": "arn:aws:ecs:us-east-1:123456789012:service/cluster-prod/service-orders",
            "serviceName": "service-orders",
            "clusterArn": "arn:aws:ecs:us-east-1:123456789012:cluster/cluster-prod",
            "status": "ACTIVE",
            "desiredCount": 4,
            "runningCount": 4,
            "pendingCount": 0,
            "launchType": "FARGATE",
            "createdAt": "2023-11-15T08:00:00Z",
            "tags": [
              {
                "key": "Environment",
                "value": "Production"
              },
              {
                "key": "Team",
                "value": "E-Commerce"
              }
            ]
          },
          {
            "serviceArn": "arn:aws:ecs:us-east-1:123456789012:service/cluster-staging/service-payments",
            "serviceName": "service-payments",
            "clusterArn": "arn:aws:ecs:us-east-1:123456789012:cluster/cluster-staging",
            "status": "ACTIVE",
            "desiredCount": 2,
            "runningCount": 2,
            "pendingCount": 0,
            "launchType": "EC2",
            "createdAt": "2024-01-10T10:45:00Z",
            "tags": [
              {
                "key": "Environment",
                "value": "Staging"
              },
              {
                "key": "Application",
                "value": "PaymentsService"
              }
            ]
          },
          {
            "serviceArn": "arn:aws:ecs:us-east-1:123456789012:service/cluster-dev/service-auth",
            "serviceName": "service-auth",
            "clusterArn": "arn:aws:ecs:us-east-1:123456789012:cluster/cluster-dev",
            "status": "ACTIVE",
            "desiredCount": 3,
            "runningCount": 3,
            "pendingCount": 0,
            "launchType": "FARGATE",
            "createdAt": "2024-02-01T14:20:00Z",
            "tags": [
              {
                "key": "Environment",
                "value": "Development"
              },
              {
                "key": "Team",
                "value": "Authentication"
              }
            ]
          }
        ]
      }
    }'
  key: 
    - xmlizable: 
      - ↑classname: com.twinsoft.convertigo.beans.steps.SmartType
      - SmartType: 
        - ↑mode: PLAIN
        - →→: Data
↓cluster [variables.RequestableVariable-1737492007718]: 
  comment: Cluster  Name
↓TestOK [core.TestCase]: 
  ↓cluster [variables.TestCaseVariable-1737492143739]: 
    value: CloudDEV